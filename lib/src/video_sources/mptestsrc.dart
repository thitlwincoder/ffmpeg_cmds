import 'package:ffmpeg_cmds/ffmpeg_cmds.dart';

/// Generate various test patterns, as generated by the MPlayer test filter.
///
/// The size of the generated video is fixed, and is 256x256. This source is useful in particular for testing encoding features.
///
/// This source accepts the following options:
///
/// Some examples:
///
/// will generate a "dc_luma" test pattern.
class Mptestsrc extends Filter {
  /// Mptestsrc
  Mptestsrc({
    this.rate,
    this.r,
    this.duration,
    this.d,
    this.test,
    this.t,
  });

  /// Specify the frame rate of the sourced video, as the number of frames generated per second. It has to be a string in the format frame\_rate\_num/frame\_rate\_den, an integer number, a floating point number or a valid video frame rate abbreviation. The default value is "25".
  Object? rate, r;

  /// Set the duration of the sourced video. See [(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual](https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax) for the accepted syntax./// If not specified, or the expressed duration is negative, the video is supposed to be generated forever.
  Object? duration, d;

  /// Set the number or the name of the test to perform. Supported tests are:
  /// - `dc_luma`
  /// - `dc_chroma`
  /// - `freq_luma`
  /// - `freq_chroma`
  /// - `amp_luma`
  /// - `amp_chroma`
  /// - `cbp`
  /// - `mv`
  /// - `ring1`
  /// - `ring2`
  /// - `all`
  /// - `max_frames, m` Set the maximum number of frames generated for each test, default value is 30.

  /// Default value is "all", which will cycle through the list of all tests.
  Object? test, t;

  @override
  String get name => 'mptestsrc';

  @override
  Map<String, dynamic> get options => {
        'rate': rate,
        'r': r,
        'duration': duration,
        'd': d,
        'test': test,
        't': t,
      };
}
