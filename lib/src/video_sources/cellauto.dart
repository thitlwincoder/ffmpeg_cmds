import 'package:ffmpeg_cmds/ffmpeg_cmds.dart';

/// Create a pattern generated by an elementary cellular automaton.
///
/// This source accepts the following options:
class Cellauto extends Filter {
  /// Cellauto
  Cellauto({
    this.filename,
    this.f,
    this.pattern,
    this.p,
    this.rate,
    this.r,
    this.randomFillRatio,
    this.ratio,
    this.randomSeed,
    this.seed,
    this.rule,
    this.size,
    this.s,
    this.scroll,
    this.startFull,
    this.full,
    this.stitch,
  });

  /// Read the initial cellular automaton state, i.e. the starting row, from the specified file. In the file, each non-whitespace character is considered an alive cell, a newline will terminate the row, and further characters in the file will be ignored.
  Object? filename, f;

  /// Read the initial cellular automaton state, i.e. the starting row, from the specified string./// Each non-whitespace character in the string is considered an alive cell, a newline will terminate the row, and further characters in the string will be ignored.
  Object? pattern, p;

  /// Set the video rate, that is the number of frames generated per second. Default is 25.
  Object? rate, r;

  /// Set the random fill ratio for the initial cellular automaton row. It is a floating point number value ranging from 0 to 1, defaults to 1/PHI./// This option is ignored when a file or a pattern is specified.
  Object? randomFillRatio, ratio;

  /// Set the seed for filling randomly the initial row, must be an integer included between 0 and UINT32_MAX. If not specified, or if explicitly set to -1, the filter will try to use a good random seed on a best effort basis.
  Object? randomSeed, seed;

  /// Set the cellular automaton rule, it is a number ranging from 0 to 255. Default value is 110.
  Object? rule;

  /// Set the size of the output video. For the syntax of this option, check the [(ffmpeg-utils)"Video size" section in the ffmpeg-utils manual](https://ffmpeg.org/ffmpeg-utils.html#video-size-syntax)./// If /// filename or /// pattern is specified, the size is set by default to the width of the specified initial state row, and the height is set to width \* PHI./// If /// size is set, it must contain the width of the specified pattern string, and the specified pattern will be centered in the larger row./// If a filename or a pattern string is not specified, the size value defaults to "320x518" (used for a randomly generated initial state).
  Object? size, s;

  /// If set to 1, scroll the output upward when all the rows in the output have been already filled. If set to 0, the new generated row will be written over the top row just after the bottom row is filled. Defaults to 1.
  Object? scroll;

  /// If set to 1, completely fill the output with generated rows before outputting the first frame. This is the default behavior, for disabling set the value to 0.
  Object? startFull, full;

  /// If set to 1, stitch the left and right row edges together. This is the default behavior, for disabling set the value to 0.
  Object? stitch;

  @override
  String get name => 'cellauto';

  @override
  Map<String, dynamic> get options => {
        'filename': filename,
        'f': f,
        'pattern': pattern,
        'p': p,
        'rate': rate,
        'r': r,
        'random_fill_ratio': randomFillRatio,
        'ratio': ratio,
        'random_seed': randomSeed,
        'seed': seed,
        'rule': rule,
        'size': size,
        's': s,
        'scroll': scroll,
        'start_full': startFull,
        'full': full,
        'stitch': stitch,
      };
}
